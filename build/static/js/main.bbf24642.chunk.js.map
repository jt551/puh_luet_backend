{"version":3,"sources":["components/FilterItems.js","components/PrintContact.js","services/Contacts.js","components/PrintContacts.jsx","components/Filter.jsx","components/NewPersonForm.jsx","components/Notification.js","App.js","index.js"],"names":["FilterItems","arr","query","filter","obj","name","toLowerCase","indexOf","PrintContact","props","className","number","baseURL","axios","get","then","response","data","newObject","post","id","put","delete","PrintContacts","prefilter","contacts","result","console","log","map","res","index","key","onClick","setNotifyMsg","setErrorMsg","window","confirm","jsonService","setTimeout","catch","error","setPersons","persons","con","Filter","htmlFor","type","placeholder","value","onChange","handleFilterChange","NewPersonForm","onSubmit","formSubmit","newName","handleChange","newNumber","handleNumChange","Notification","message","err","App","useState","setNewName","setNewNumber","setFilter","errorMsg","notifyMsg","useEffect","event","target","preventDefault","find","updateobj","def","person","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbf24642.chunk.js","sourcesContent":["//import React from 'react'\r\n\r\nconst FilterItems = (arr, query) => {\r\n    return arr.filter(obj => obj.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n  };\r\n\r\nexport default FilterItems","import React from 'react';\r\n\r\nconst PrintContact = (props) => {\r\n    return (\r\n        <li className=\"list-group-item col-lg-4\">{props.name} : {props.number}</li>\r\n \r\n    )\r\n}\r\n\r\nexport default PrintContact","import axios from 'axios'\r\nconst baseURL = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseURL, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseURL}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseURL}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, remove}","import React from \"react\";\r\nimport FilterItems from './FilterItems';\r\nimport PrintContact from './PrintContact'\r\nimport jsonService from '../services/Contacts'\r\n\r\n\r\n\r\nconst PrintContacts = (props) => {\r\n  const prefilter = props.contacts;\r\n  const filter = props.filter;\r\n  \r\n  const removeContact = (id, name, setNotifyMsg) => {\r\n    if(window.confirm(`Remove contact ${name}?`)){\r\n      const rm = jsonService.remove(id);\r\n      rm\r\n      .then(setNotifyMsg(`${name} deleted`))\r\n      .then(setTimeout(()=> {\r\n        setNotifyMsg(null)\r\n      }, 3000))\r\n      .catch(error => {props.setErrorMsg('error')\r\n        setTimeout(()=> {\r\n          props.setErrorMsg(null)\r\n        }, 3000)\r\n      })\r\n      \r\n      props.setPersons(props.persons.filter( con => con.id !== id))\r\n    }    \r\n  }  \r\n  \r\n  const result = FilterItems(prefilter, filter);\r\n  console.log(result);\r\n  \r\n    return (\r\n        <div>\r\n          <h1>Contacts</h1>\r\n          \r\n            {result.map((res, index )=>\r\n            <div className=\"row\" key={index}>\r\n               <PrintContact key={res.name} name={res.name} number={res.number}/> <button className=\"btn btn-outline-danger btn-sm\" onClick={()=> removeContact(res.id, res.name, props.setNotifyMsg, props.setErrorMsg)}>Delete</button>\r\n            </div>)}\r\n          \r\n        </div>\r\n      )\r\n}\r\n\r\nexport default PrintContacts;\r\n","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n      <div>\r\n        <label htmlFor=\"filterinput\">Filter results</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control col-lg-4\"\r\n          id=\"filterinput\"\r\n          placeholder=\"Filter\"\r\n          value={props.filter}\r\n          onChange={props.handleFilterChange}\r\n        />\r\n      </div>\r\n    );\r\n}\r\nexport default Filter;\r\n","import React from 'react'\r\n\r\nconst NewPersonForm = (props) => {\r\n    return (\r\n        <div>\r\n        <form onSubmit={props.formSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"nameinput\">Add new name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control col-lg-4\"\r\n            id=\"nameinput\"\r\n            placeholder=\"Name\"\r\n            value={props.newName}\r\n            onChange={props.handleChange}\r\n          />\r\n          <label htmlFor=\"phoneinput\">number</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control col-lg-4\"\r\n            id=\"phoneinput\"\r\n            placeholder=\"Number\"\r\n            value={props.newNumber}\r\n            onChange={props.handleNumChange}\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary\" type=\"submit\">\r\n         Add\r\n        </button>\r\n      </form>\r\n        </div>\r\n    )\r\n}\r\nexport default NewPersonForm;\r\n","import React from 'react'\r\n\r\nconst Notification = (props) => {\r\n    \r\n    if( props.message === null && props.err === null){\r\n        return null\r\n    }\r\n    else if (props.message){\r\n        return(\r\n        <div className=\"notify\">\r\n            <p>{props.message}</p>\r\n        </div>\r\n        )\r\n    }\r\n    else if (props.err){\r\n        return (\r\n        <div className=\"error\">\r\n            <p>{props.err}</p>\r\n        </div>\r\n        )\r\n    }\r\n        \r\n    \r\n}\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react'\nimport PrintContacts from \"./components/PrintContacts\"\nimport Filter from './components/Filter'\nimport NewPersonForm from './components/NewPersonForm'\nimport jsonService from './services/Contacts'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter] = useState('')\n  const [errorMsg, setErrorMsg] = useState(null)\n  const [notifyMsg, setNotifyMsg] = useState(null)\n\n  useEffect(() => {\n    jsonService\n      .getAll()\n      .then(response => setPersons(response))\n      .catch(error => {setErrorMsg('connection error')\n      setTimeout(()=> {\n        setErrorMsg(null)\n      }, 3000)\n    })\n  }, [])\n\n  const handleChange = (event) => {\n    setNewName(event.target.value);\n  }\n  const handleNumChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const formSubmit = (event) => {\n    event.preventDefault()\n\n    const search = persons.find(function (obj) {\n      return obj.name === newName;\n    })\n    \n    if(search){\n      if(window.confirm(`${newName} exists, do you want to update the number?`)){\n      const updateobj = persons.find(def => def.name === newName)\n      updateobj.number = newNumber\n      jsonService\n      .update(updateobj.id, updateobj)\n      .then(response => {\n        setPersons(persons.map(person => person.id !== updateobj.id ? person : response ))\n        setNotifyMsg(`${newName} updated`)\n        setNewName('')\n        setNewNumber('')\n        setTimeout(()=> {\n          setNotifyMsg(null)\n        }, 3000)\n      })\n      .catch(error => {\n        setErrorMsg('update error')\n        setTimeout(()=> {\n          setErrorMsg(null)\n        }, 3000)\n      })\n      }\n    } else{\n      const contactObject = {\n        name: newName,\n        number: newNumber\n      }\n      jsonService\n      .create(contactObject)\n      .then(response => {\n        setPersons(persons.concat(response))\n        setNotifyMsg(`${newName} created`)\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setTimeout(()=> {\n          setNotifyMsg(null)\n        }, 3000)\n      })\n      .catch(error => {setErrorMsg('error while creating entry')\n        setTimeout(()=> {\n          setErrorMsg(null)\n        }, 3000)\n      })\n\n      \n    }\n           \n    }\n  \n\n  return (\n    <div>\n    <h2>Phonebook</h2>\n        <Notification message={notifyMsg} err={errorMsg}/>\n        <Filter filter={filter} handleFilterChange={handleFilterChange}/>\n        <NewPersonForm formSubmit={formSubmit} newName={newName} handleChange={handleChange} newNumber={newNumber} handleNumChange={handleNumChange}/>\n        <PrintContacts contacts={persons} filter={filter} persons={persons} setPersons={setPersons} setNotifyMsg={setNotifyMsg} setErrorMsg={setErrorMsg}/>\n      \n    </div>\n  );\n\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}